{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u043B\\u0430\\u0434\\\\Desktop\\\\GoIT\\\\goit-react-hw-02-feedback\\\\src\\\\index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\"; // Отделяйте именованные импорты, это повышает читаемость кода\n// ✅ Хорошо\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Toggle extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      isOpen: false\n    };\n\n    this.show = () => this.setState({\n      isOpen: true\n    });\n\n    this.hide = () => this.setState({\n      isOpen: false\n    });\n  }\n\n  render() {\n    const {\n      isOpen\n    } = this.state;\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.show,\n        children: \"Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.hide,\n        children: \"Hide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), isOpen && children]\n    }, void 0, true);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Toggle, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Влад/Desktop/GoIT/goit-react-hw-02-feedback/src/index.js"],"names":["React","Component","ReactDOM","Toggle","state","isOpen","show","setState","hide","render","children","props","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AAEA;;;;;AACA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KADqB;;AAAA,SAG7BC,IAH6B,GAGtB,MAAM,KAAKC,QAAL,CAAc;AAAEF,MAAAA,MAAM,EAAE;AAAV,KAAd,CAHgB;;AAAA,SAK7BG,IAL6B,GAKtB,MAAM,KAAKD,QAAL,CAAc;AAAEF,MAAAA,MAAM,EAAE;AAAV,KAAd,CALgB;AAAA;;AAO7BI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACA,UAAM;AAAEM,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AAEA,wBACE;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAE,KAAKL,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,OAAO,EAAE,KAAKE,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGH,MAAM,IAAIK,QAHb;AAAA,oBADF;AAOD;;AAlB4B;;AAqB/BR,QAAQ,CAACO,MAAT,eAAgB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAA4BG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5B","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n// Отделяйте именованные импорты, это повышает читаемость кода\n\n// ✅ Хорошо\nclass Toggle extends Component {\n  state = { isOpen: false };\n\n  show = () => this.setState({ isOpen: true });\n\n  hide = () => this.setState({ isOpen: false });\n\n  render() {\n    const { isOpen } = this.state;\n    const { children } = this.props;\n\n    return (\n      <>\n        <button onClick={this.show}>Show</button>\n        <button onClick={this.hide}>Hide</button>\n        {isOpen && children}\n      </>\n    );\n  }\n}\n\nReactDOM.render(<Toggle />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}