{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u043B\\u0430\\u0434\\\\Desktop\\\\GoIT\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\FeedbackOptions\\\\FeedbackOptions.jsx\";\nimport React, { Component } from \"react\";\nimport { Button, Span } from \"./FeedbackOptions.styled\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.countTotalFeedback = () => {\n      return this.state.good + this.state.neutral + this.state.bad;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      console.log(Object.keys(this.state));\n\n      if (isNaN(this.state.good / this.countTotalFeedback() * 100)) {\n        return 0;\n      } else {\n        return this.state.good / this.countTotalFeedback() * 100;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Please leave feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: this.handleIncrementGood,\n          children: \"good\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: this.handleIncrementNetural,\n          children: \"neutral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: this.handleIncrementBad,\n          children: \"bad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {\n        children: [\"good: \", this.state.good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {\n        children: [\"neutral:\", this.state.neutral, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {\n        children: [\"bad:\", this.state.bad, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {\n        children: [\"Total : \", this.countTotalFeedback()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Span, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Positive Feedback : \", this.countPositiveFeedbackPercentage(), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/Влад/Desktop/GoIT/goit-react-hw-02-feedback/src/components/FeedbackOptions/FeedbackOptions.jsx"],"names":["React","Component","Button","Span","PropTypes","Counter","countTotalFeedback","state","good","neutral","bad","countPositiveFeedbackPercentage","console","log","Object","keys","isNaN","render","handleIncrementGood","handleIncrementNetural","handleIncrementBad"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,0BAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,OAAN,SAAsBJ,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAC9BK,kBAD8B,GACT,MAAM;AACzB,aAAO,KAAKC,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAzD;AACD,KAH6B;;AAAA,SAI9BC,+BAJ8B,GAII,MAAM;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAY,KAAKR,KAAjB,CAAZ;;AACA,UAAIS,KAAK,CAAE,KAAKT,KAAL,CAAWC,IAAX,GAAkB,KAAKF,kBAAL,EAAnB,GAAgD,GAAjD,CAAT,EAAgE;AAC9D,eAAO,CAAP;AACD,OAFD,MAEO;AACL,eAAQ,KAAKC,KAAL,CAAWC,IAAX,GAAkB,KAAKF,kBAAL,EAAnB,GAAgD,GAAvD;AACD;AACF,KAX6B;AAAA;;AAY9BW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE,KAAKC,mBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE,KAAKC,sBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE,KAAKC,kBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE,QAAC,IAAD;AAAA,6BAAa,KAAKb,KAAL,CAAWC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE,QAAC,IAAD;AAAA,+BAAe,KAAKD,KAAL,CAAWE,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE,QAAC,IAAD;AAAA,2BAAW,KAAKF,KAAL,CAAWG,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,IAAD;AAAA,+BAAe,KAAKJ,kBAAL,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAkBE,QAAC,IAAD;AAAA,gCACE;AAAA,6CACuB,KAAKK,+BAAL,EADvB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAGY,GAHZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAvC6B;;AAyChC,eAAeN,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Span } from \"./FeedbackOptions.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Counter extends Component {\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    console.log(Object.keys(this.state));\r\n    if (isNaN((this.state.good / this.countTotalFeedback()) * 100)) {\r\n      return 0;\r\n    } else {\r\n      return (this.state.good / this.countTotalFeedback()) * 100;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Please leave feedback</h1>\r\n        <div>\r\n          <Button type=\"button\" onClick={this.handleIncrementGood}>\r\n            good\r\n          </Button>\r\n          <Button type=\"button\" onClick={this.handleIncrementNetural}>\r\n            neutral\r\n          </Button>\r\n          <Button type=\"button\" onClick={this.handleIncrementBad}>\r\n            bad\r\n          </Button>\r\n        </div>\r\n        <h2>Statistics</h2>\r\n        <Span>good: {this.state.good}</Span>\r\n        <Span>neutral:{this.state.neutral} </Span>\r\n        <Span>bad:{this.state.bad} </Span>\r\n        <Span>Total : {this.countTotalFeedback()}</Span>\r\n        <Span>\r\n          <strong>\r\n            Positive Feedback : {this.countPositiveFeedbackPercentage()}%\r\n          </strong>{\" \"}\r\n        </Span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}