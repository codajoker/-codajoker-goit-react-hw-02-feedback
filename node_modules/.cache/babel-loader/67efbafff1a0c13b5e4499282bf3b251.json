{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u043B\\u0430\\u0434\\\\Desktop\\\\GoIT\\\\goit-react-hw-02-feedback\\\\src\\\\App.jsx\";\nimport React, { Component } from \"react\";\nimport { FeedbackOptions, Statistics, Section, Notification } from \"./components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.onLeaveFeedback = e => {\n      const name = e.CurentTarget;\n      console.log(name);\n      this.setState(state => {\n        return {\n          [name]: state[name] + 1\n        };\n      });\n    };\n\n    this.countTotalFeedback = () => {\n      return this.state.good + this.state.neutral + this.state.bad;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      if (isNaN(this.state.good / this.countTotalFeedback() * 100)) {\n        return 0;\n      } else {\n        return this.state.good / this.countTotalFeedback() * 100;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: this.state,\n          onLeaveFeedback: this.onLeaveFeedback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: /*#__PURE__*/_jsxDEV(Statistics, {\n          good: this.state.good,\n          neutral: this.state.neutral,\n          bad: this.state.bad,\n          total: this.countTotalFeedback(),\n          positivePercentage: this.countPositiveFeedbackPercentage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Влад/Desktop/GoIT/goit-react-hw-02-feedback/src/App.jsx"],"names":["React","Component","FeedbackOptions","Statistics","Section","Notification","App","state","good","neutral","bad","onLeaveFeedback","e","name","CurentTarget","console","log","setState","countTotalFeedback","countPositiveFeedbackPercentage","isNaN","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,eADF,EAEEC,UAFF,EAGEC,OAHF,EAIEC,YAJF,QAKO,cALP;;;;AAMA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADkB;;AAAA,SAM1BC,eAN0B,GAMPC,CAAD,IAAO;AACvB,YAAMC,IAAI,GAAGD,CAAC,CAACE,YAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,WAAKI,QAAL,CAAeV,KAAD,IAAW;AACvB,eAAO;AACL,WAACM,IAAD,GAAQN,KAAK,CAACM,IAAD,CAAL,GAAc;AADjB,SAAP;AAGD,OAJD;AAKD,KAdyB;;AAAA,SAe1BK,kBAf0B,GAeL,MAAM;AACzB,aAAO,KAAKX,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAzD;AACD,KAjByB;;AAAA,SAkB1BS,+BAlB0B,GAkBQ,MAAM;AACtC,UAAIC,KAAK,CAAE,KAAKb,KAAL,CAAWC,IAAX,GAAkB,KAAKU,kBAAL,EAAnB,GAAgD,GAAjD,CAAT,EAAgE;AAC9D,eAAO,CAAP;AACD,OAFD,MAEO;AACL,eAAQ,KAAKX,KAAL,CAAWC,IAAX,GAAkB,KAAKU,kBAAL,EAAnB,GAAgD,GAAvD;AACD;AACF,KAxByB;AAAA;;AAyB1BG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE,uBAAhB;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,OAAO,EAAE,KAAKd,KADhB;AAEE,UAAA,eAAe,EAAE,KAAKI;AAFxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE,YAAhB;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWC,IADnB;AAEE,UAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAFtB;AAGE,UAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,GAHlB;AAIE,UAAA,KAAK,EAAE,KAAKQ,kBAAL,EAJT;AAKE,UAAA,kBAAkB,EAAE,KAAKC,+BAAL;AALtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA,oBADF;AAmBD;;AA7CyB;;AAgD5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  FeedbackOptions,\r\n  Statistics,\r\n  Section,\r\n  Notification,\r\n} from \"./components\";\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  onLeaveFeedback = (e) => {\r\n    const name = e.CurentTarget;\r\n    console.log(name);\r\n    this.setState((state) => {\r\n      return {\r\n        [name]: state[name] + 1,\r\n      };\r\n    });\r\n  };\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    if (isNaN((this.state.good / this.countTotalFeedback()) * 100)) {\r\n      return 0;\r\n    } else {\r\n      return (this.state.good / this.countTotalFeedback()) * 100;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title={\"Please leave feedback\"}>\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.onLeaveFeedback}\r\n          ></FeedbackOptions>\r\n        </Section>\r\n        <Section title={\"Statistics\"}>\r\n          <Statistics\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          ></Statistics>\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}