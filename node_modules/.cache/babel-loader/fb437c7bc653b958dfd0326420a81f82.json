{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u043B\\u0430\\u0434\\\\Desktop\\\\GoIT\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App\\\\App.js\";\nimport { Component } from \"react\";\nimport { Statistics, FeedbackOptions, Section, Notification } from \"components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.feedbackIncrement = e => {\n      // console.log(e.target);\n      const name = e.target.name;\n      this.setState(prevState => {\n        return {\n          [name]: prevState[name] + 1\n        };\n      });\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      return Math.round(this.state.good * 100 / (this.state.good + this.state.neutral + this.state.bad === 0 ? 1 : this.state.good + this.state.neutral + this.state.bad));\n    };\n\n    this.countTotalFeedback = () => {\n      return this.state.good + this.state.neutral + this.state.bad;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {\n          options: Object.keys(this.state),\n          onLeaveFeedback: this.feedbackIncrement\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\",\n        children: this.state.good || this.state.neutral || this.state.bad ? /*#__PURE__*/_jsxDEV(Statistics, {\n          good: this.state.good,\n          neutral: this.state.neutral,\n          bad: this.state.bad,\n          total: this.countTotalFeedback(),\n          positivePercentage: this.countPositiveFeedbackPercentage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Notification, {\n          message: \"There is no feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport { App };","map":{"version":3,"sources":["C:/Users/Влад/Desktop/GoIT/goit-react-hw-02-feedback/src/components/App/App.js"],"names":["Component","Statistics","FeedbackOptions","Section","Notification","App","state","good","neutral","bad","feedbackIncrement","e","name","target","setState","prevState","countPositiveFeedbackPercentage","Math","round","countTotalFeedback","render","Object","keys"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,OAAtC,EAA+CC,YAA/C,QAAmE,YAAnE;;;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADkB;;AAAA,SAO1BC,iBAP0B,GAOLC,CAAD,IAAO;AACzB;AACA,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,WAAKE,QAAL,CAAeC,SAAD,IAAe;AAC3B,eAAO;AACL,WAACH,IAAD,GAAQG,SAAS,CAACH,IAAD,CAAT,GAAkB;AADrB,SAAP;AAGD,OAJD;AAKD,KAfyB;;AAAA,SAiB1BI,+BAjB0B,GAiBQ,MAAM;AACtC,aAAOC,IAAI,CAACC,KAAL,CACJ,KAAKZ,KAAL,CAAWC,IAAX,GAAkB,GAAnB,IACG,KAAKD,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAlD,KAA0D,CAA1D,GACG,CADH,GAEG,KAAKH,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAHxD,CADK,CAAP;AAMD,KAxByB;;AAAA,SA0B1BU,kBA1B0B,GA0BL,MAAM;AACzB,aAAO,KAAKb,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAzD;AACD,KA5ByB;AAAA;;AA8B1BW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE,uBAAhB;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,OAAO,EAAEC,MAAM,CAACC,IAAP,CAAY,KAAKhB,KAAjB,CADX;AAEE,UAAA,eAAe,EAAE,KAAKI;AAFxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE,YAAhB;AAAA,kBACG,KAAKJ,KAAL,CAAWC,IAAX,IAAmB,KAAKD,KAAL,CAAWE,OAA9B,IAAyC,KAAKF,KAAL,CAAWG,GAApD,gBACC,QAAC,UAAD;AACE,UAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,IADnB;AAEE,UAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE,OAFtB;AAGE,UAAA,GAAG,EAAE,KAAKF,KAAL,CAAWG,GAHlB;AAIE,UAAA,KAAK,EAAE,KAAKU,kBAAL,EAJT;AAKE,UAAA,kBAAkB,EAAE,KAAKH,+BAAL;AALtB;AAAA;AAAA;AAAA;AAAA,gBADD,gBASC,QAAC,YAAD;AAAc,UAAA,OAAO,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,cARF;AAAA,oBADF;AAwBD;;AAvDyB;;AA0D5B,SAASX,GAAT","sourcesContent":["import { Component } from \"react\";\r\nimport { Statistics, FeedbackOptions, Section, Notification } from \"components\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  feedbackIncrement = (e) => {\r\n    // console.log(e.target);\r\n    const name = e.target.name;\r\n    this.setState((prevState) => {\r\n      return {\r\n        [name]: prevState[name] + 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    return Math.round(\r\n      (this.state.good * 100) /\r\n        (this.state.good + this.state.neutral + this.state.bad === 0\r\n          ? 1\r\n          : this.state.good + this.state.neutral + this.state.bad)\r\n    );\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title={\"Please leave feedback\"}>\r\n          <FeedbackOptions\r\n            options={Object.keys(this.state)}\r\n            onLeaveFeedback={this.feedbackIncrement}\r\n          />\r\n        </Section>\r\n\r\n        <Section title={\"Statistics\"}>\r\n          {this.state.good || this.state.neutral || this.state.bad ? (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              total={this.countTotalFeedback()}\r\n              positivePercentage={this.countPositiveFeedbackPercentage()}\r\n            />\r\n          ) : (\r\n            <Notification message=\"There is no feedback\" />\r\n          )}\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport { App };\r\n"]},"metadata":{},"sourceType":"module"}