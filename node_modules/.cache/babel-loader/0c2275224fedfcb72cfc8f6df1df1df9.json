{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0412\\u043B\\u0430\\u0434\\\\Desktop\\\\GoIT\\\\goit-react-hw-02-feedback\\\\src\\\\App.jsx\";\nimport React, { Component } from \"react\";\nimport { FeedbackOptions, Statistics, Section, Notification } from \"./components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.handleIncrement = e => {\n      const name = e.target.name;\n      this.setState(state => {\n        return {\n          [name]: state[name] + 1\n        };\n      });\n    };\n\n    this.countTotalFeedback = () => {\n      return this.state.good + this.state.neutral + this.state.bad;\n    };\n\n    this.countPositiveFeedbackPercentage = () => {\n      console.log(Object.keys(this.state));\n\n      if (isNaN(this.state.good / this.countTotalFeedback() * 100)) {\n        return 0;\n      } else {\n        return this.state.good / this.countTotalFeedback() * 100;\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        title: \"Please leave feedback\",\n        children: /*#__PURE__*/_jsxDEV(FeedbackOptions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        title: \"Statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Влад/Desktop/GoIT/goit-react-hw-02-feedback/src/App.jsx"],"names":["React","Component","FeedbackOptions","Statistics","Section","Notification","App","state","good","neutral","bad","handleIncrement","e","name","target","setState","countTotalFeedback","countPositiveFeedbackPercentage","console","log","Object","keys","isNaN","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,eADF,EAEEC,UAFF,EAGEC,OAHF,EAIEC,YAJF,QAKO,cALP;;;;AAMA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BM,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KADkB;;AAAA,SAM1BC,eAN0B,GAMPC,CAAD,IAAO;AACvB,YAAMC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAtB;AACA,WAAKE,QAAL,CAAeR,KAAD,IAAW;AACvB,eAAO;AACL,WAACM,IAAD,GAAQN,KAAK,CAACM,IAAD,CAAL,GAAc;AADjB,SAAP;AAGD,OAJD;AAKD,KAbyB;;AAAA,SAc1BG,kBAd0B,GAcL,MAAM;AACzB,aAAO,KAAKT,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAzD;AACD,KAhByB;;AAAA,SAiB1BO,+BAjB0B,GAiBQ,MAAM;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,IAAP,CAAY,KAAKd,KAAjB,CAAZ;;AACA,UAAIe,KAAK,CAAE,KAAKf,KAAL,CAAWC,IAAX,GAAkB,KAAKQ,kBAAL,EAAnB,GAAgD,GAAjD,CAAT,EAAgE;AAC9D,eAAO,CAAP;AACD,OAFD,MAEO;AACL,eAAQ,KAAKT,KAAL,CAAWC,IAAX,GAAkB,KAAKQ,kBAAL,EAAnB,GAAgD,GAAvD;AACD;AACF,KAxByB;AAAA;;AAyB1BO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE,uBAAhB;AAAA,+BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAhB;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA,oBADF;AAQD;;AAlCyB;;AAqC5B,eAAejB,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  FeedbackOptions,\r\n  Statistics,\r\n  Section,\r\n  Notification,\r\n} from \"./components\";\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  handleIncrement = (e) => {\r\n    const name = e.target.name;\r\n    this.setState((state) => {\r\n      return {\r\n        [name]: state[name] + 1,\r\n      };\r\n    });\r\n  };\r\n  countTotalFeedback = () => {\r\n    return this.state.good + this.state.neutral + this.state.bad;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n    console.log(Object.keys(this.state));\r\n    if (isNaN((this.state.good / this.countTotalFeedback()) * 100)) {\r\n      return 0;\r\n    } else {\r\n      return (this.state.good / this.countTotalFeedback()) * 100;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <Section title={\"Please leave feedback\"}>\r\n          <FeedbackOptions></FeedbackOptions>\r\n        </Section>\r\n        <Section title={\"Statistics\"}></Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}